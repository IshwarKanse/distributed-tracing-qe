apiVersion: kuttl.dev/v1beta1
kind: TestStep
commands:
  - command: kubectl -n $NAMESPACE create rolebinding default-view-$NAMESPACE --role=pod-view --serviceaccount=$NAMESPACE:ta
  # Annotate the namespace to allow the application to run using an specific group and user in OpenShift
  # https://docs.openshift.com/dedicated/authentication/managing-security-context-constraints.html
  # This annotation has no effect in Kubernetes
  - command: kubectl annotate namespace ${NAMESPACE} openshift.io/sa.scc.uid-range=1000/1000 --overwrite
  - command: kubectl annotate namespace ${NAMESPACE} openshift.io/sa.scc.supplemental-groups=3000/1000 --overwrite

---
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: otel-logs
spec:
  mode: deployment
  config: |
    receivers:
      otlp:
        protocols:
          grpc:
          http:
    processors:
    exporters:
      logging:
        verbosity: detailed
    service:
      pipelines:
        logs:
          receivers: [otlp]
          processors: []
          exporters: [logging]

---
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: otel-logs-sidecar
spec:
  mode: sidecar
  image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.92.0
  config: |
    receivers:
      filelog:
        include: [ /log-data/*.log ]
        operators:
          - type: regex_parser
            regex: '^(?P<time>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2},\d{3}) - (?P<logger>\S+) - (?P<sev>\S+) - (?P<message>.*)$'
            timestamp:
              parse_from: attributes.time
              layout: '%Y-%m-%d %H:%M:%S'
            severity:
              parse_from: attributes.sev
    processors:
    exporters:
      otlp:
        endpoint: otel-logs-collector:4317
        tls:
          insecure: true
    service:
      pipelines:
        logs:
          receivers: [filelog]
          processors: []
          exporters: [otlp]
  volumeMounts:
  - name: log-data
    mountPath: /log-data
