# Application that generates test logs for CloudWatch Logs testing
apiVersion: v1
kind: ConfigMap
metadata:
  name: log-generator-config
data:
  generate-logs.sh: |
    #!/bin/bash
    echo "Starting log generation for role_arn test at $(date)"
    
    counter=1
    while true; do
        timestamp=$(date '+%Y-%m-%d %H:%M:%S')
        echo "[$timestamp] INFO: Role ARN test log entry #$counter - Testing AWS CloudWatch Logs exporter with role_arn configuration"
        echo "[$timestamp] DEBUG: This log demonstrates role_arn parameter usage (currently not implemented)"
        echo "[$timestamp] WARN: Role assumption should use arn:aws:iam::123456789012:role/CloudWatchLogsRole"
        
        # Write to file as well for filelog receiver
        echo "[$timestamp] INFO: Role ARN test log entry #$counter" >> /tmp/test-logs.log
        
        counter=$((counter + 1))
        sleep 10
        
        # Stop after 30 entries to avoid infinite logs
        if [ $counter -gt 30 ]; then
            echo "[$timestamp] INFO: Log generation completed - 30 entries generated"
            break
        fi
    done
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: log-generator-rolearn
spec:
  replicas: 1
  selector:
    app: log-generator-rolearn
  template:
    metadata:
      annotations:
        sidecar.opentelemetry.io/inject: "true"
      labels:
        app: log-generator-rolearn
    spec:
      containers:
      - name: log-generator
        image: registry.access.redhat.com/ubi8/ubi-minimal:latest
        command: ["/bin/bash"]
        args: ["/scripts/generate-logs.sh"]
        volumeMounts:
        - name: config
          mountPath: /scripts
        - name: log-storage
          mountPath: /tmp
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: config
        configMap:
          name: log-generator-config
          defaultMode: 0755
      - name: log-storage
        emptyDir: {}