apiVersion: project.openshift.io/v1
kind: Project
metadata:
  name: kuttl-jaeger-otel-sidecar-app
status:
  phase: Active

---
apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  labels:
    app.kubernetes.io/managed-by: opentelemetry-operator
  name: otel
  namespace: kuttl-jaeger-otel-sidecar-app
spec:
  config: |
    receivers:
      jaeger:
        protocols:
          grpc:
          thrift_binary:
          thrift_compact:
          thrift_http:
      opencensus:
      otlp:
        protocols:
          grpc:
          http:
      zipkin:
    processors:
      batch:
        # Batching helps better compress the data and reduce the number of outgoing
        # connections required to transmit the data.
        # https://github.com/open-telemetry/opentelemetry-collector/blob/main/processor/batchprocessor
      memory_limiter:
        # Prevents out of memory situations on the collector
        # https://github.com/open-telemetry/opentelemetry-collector/tree/main/processor/memorylimiterprocessor
        check_interval: 1s
        limit_percentage: 50
        spike_limit_percentage: 30
    exporters:
      otlp:
        endpoint: "cluster-collector-collector.kuttl-jaeger-otel-sidecar.svc:4317"
        tls:
          insecure: true
    service:
      pipelines:
        traces:
          receivers: [jaeger, opencensus, otlp, zipkin]
          processors: [memory_limiter, batch]
          exporters: [otlp]
  ingress:
    route: {}
  mode: sidecar
  replicas: 1
  resources: {}
  targetAllocator:
    prometheusCR: {}
    resources: {}
  upgradeStrategy: automatic

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    test: otel
  name: sample-app
  namespace: kuttl-jaeger-otel-sidecar-app
status:
  availableReplicas: 1
  readyReplicas: 1
  replicas: 1

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: sample-app
    test: otel
  name: sample-app
  namespace: kuttl-jaeger-otel-sidecar-app
spec:
  ports:
  - name: sample-app
    port: 80
    protocol: TCP
    targetPort: 8080

---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    jaeger-infra: sample-app-route
    test: otel
  name: sample-app
  namespace: kuttl-jaeger-otel-sidecar-app
spec:
  to:
    kind: Service
    name: sample-app
    weight: 100
